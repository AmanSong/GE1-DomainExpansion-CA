[gd_scene load_steps=9 format=3 uid="uid://cwhwl065yn8s6"]

[sub_resource type="GDScript" id="GDScript_l2t63"]
script/source = "extends Node3D

# The cube scene to instantiate
var cube_scene = preload(\"res://barrier.tscn\")

# Number of cubes in each dimension
var num_cubes_longitude = 100
var num_cubes_latitude = 50

# Radius of the sphere
var sphere_radius = 75

# Load sound
@onready var audio_player = $AudioStreamPlayer3D 
var domain_sfx: AudioStream = preload(\"res://Sounds/infinite_void_sfx.mp3\")

@onready var speed_lines = $speed_lines


func _ready():
	if not audio_player.playing:
			audio_player.stream = domain_sfx
			audio_player.play()
			
	# to allow for sfx to play
	await get_tree().create_timer(2.5).timeout
	
	
	for lat in range(num_cubes_latitude):
		await get_tree().create_timer(0.095).timeout
		for lon in range(num_cubes_longitude):
			
			# Calculate the spherical coordinates for each cube
			var theta = (lon * (2 * PI) / num_cubes_longitude)
			var phi = lat * PI / (num_cubes_latitude - 1)
			
			# Convert spherical coordinates to Cartesian coordinates
			var x = sphere_radius * sin(phi) * cos(theta)
			var y = sphere_radius * cos(phi)
			var z = sphere_radius * sin(phi) * sin(theta)

			# Instantiate the cube scene
			var cube_instance = cube_scene.instantiate()
			
			# Set the cube's position relative to the player
			cube_instance.transform.origin = Vector3(x, z, y)
			# Add the cube to the scene
			add_child(cube_instance)
	
	speed_lines.emitting = true
	
	await get_tree().create_timer(30.0).timeout
	queue_free()
	
	
func _on_timer_timeout():
	queue_free() 

"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_583ce"]

[sub_resource type="PlaneMesh" id="PlaneMesh_61sg0"]
material = SubResource("StandardMaterial3D_583ce")

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_wbapj"]
data = PackedVector3Array(1, 0, 1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0, -1, 1, 0, -1)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_0eys1"]
cull_mode = 2
emission_enabled = true
emission = Color(1, 1, 1, 1)

[sub_resource type="SphereMesh" id="SphereMesh_scipp"]
material = SubResource("StandardMaterial3D_0eys1")

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_8fcuk"]
cull_mode = 2
albedo_color = Color(1, 0.431373, 0.792157, 1)
emission_enabled = true
emission = Color(0.913725, 0.352941, 0.717647, 1)

[sub_resource type="RibbonTrailMesh" id="RibbonTrailMesh_p8slm"]
material = SubResource("StandardMaterial3D_8fcuk")
shape = 0
size = 100.0

[node name="InfiniteVoid" type="Node3D" groups=["domain"]]
script = SubResource("GDScript_l2t63")

[node name="BarrierFloor" type="MeshInstance3D" parent="."]
transform = Transform3D(80, 0, 0, 0, 80, 0, 0, 0, 80, 0, -1, 0)
visible = false
transparency = 1.0
mesh = SubResource("PlaneMesh_61sg0")

[node name="StaticBody3D" type="StaticBody3D" parent="BarrierFloor"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="BarrierFloor/StaticBody3D"]
shape = SubResource("ConcavePolygonShape3D_wbapj")

[node name="CSGCombiner3D" type="CSGCombiner3D" parent="."]
visible = false
operation = 2

[node name="sphere1" type="MeshInstance3D" parent="CSGCombiner3D"]
transform = Transform3D(150, 0, 0, 0, 150, 0, 0, 0, 150, 0, 0, 0)
cast_shadow = 0
mesh = SubResource("SphereMesh_scipp")
skeleton = NodePath("../..")

[node name="sphere2" type="MeshInstance3D" parent="CSGCombiner3D"]
transform = Transform3D(99.9, 0, 0, 0, 99.9, 0, 0, 0, 99.9, 0, 0, 0)
skeleton = NodePath("../..")

[node name="Timer" type="Timer" parent="."]
wait_time = 15.0

[node name="AudioStreamPlayer3D" type="AudioStreamPlayer3D" parent="."]
attenuation_model = 3
volume_db = 1.0

[node name="speed_lines" type="CPUParticles3D" parent="."]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 0, 0, 0)
visible = false
emitting = false
amount = 16
speed_scale = 30.0
explosiveness = 1.0
randomness = 0.5
mesh = SubResource("RibbonTrailMesh_p8slm")
emission_shape = 1
emission_sphere_radius = 80.0
gravity = Vector3(0, 0, -50)
tangential_accel_min = -100.0
tangential_accel_max = -100.0
